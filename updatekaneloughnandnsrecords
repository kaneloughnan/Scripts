#!/bin/bash
function updateIP {
    curl -X PUT "https://api.godaddy.com/v1/domains/$domain/records/$type/$1" \
    -H "accept: application/json" \
    -H "Content-Type: application/json" \
    -H "$headers" \
    -d "[ { \"data\": \"$currentIp\", \"port\": $port, \"priority\": 0, \"protocol\": \"string\", \"service\": \"string\", \"ttl\": $ttl, \"weight\": $weight } ]"

    echo $1 "updated"
}

domain="kaneloughnan.com"                   # your domain
type="A"                                    # Record type A, CNAME, MX, etc.
main="@"                                    # name of record to check
ttl="600"                                   # Time to Live min value 600
port="1"                                    # Required port, Min value 1
weight="1"                                  # Required weight, Min value 1
key="dKDEDCdZNck2_CboWW6o6pyMPnGXSUNyXiV"   # key for godaddy developer API
secret="Hcdo1KNHkqKaqeJo94cSi9"             # secret for godaddy developer API

headers="Authorization: sso-key $key:$secret"
echo $headers

result=$(curl -s -X GET -H "$headers" "https://api.godaddy.com/v1/domains/$domain/records/$type/$main")

dnsIp=$(echo $result | grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b")
echo "dnsIp:" $dnsIp

# Get public ip address - there are several websites that can do this.
currentIp=$(curl -s GET "https://ipinfo.io/ip")

echo "currentIp:" $currentIp

if [ $dnsIp != $currentIp ]; then
        echo "IP's are not equal, updating record"

        while read line; do
            updateIP $line
        done </home/ubuntu/domains.txt
else
        echo "IP's are equal, no update required"
fi
